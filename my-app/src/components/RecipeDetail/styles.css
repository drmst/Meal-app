.meal-container {
    display: flex;
    justify-content: space-evenly;
}

.recipe-summary {
    /* Never set both height and width at the same time as there's a high chance content will overflow at some point. If you want to use width, let the height to be what the content needs unless you have a very unflexible element that never changes in size (e.g. icon).
Sometimes you may want to use minHeight just to ensure that the section takes enough space event if there's not enough content.   
    */

    width: 20%;
    background-color: rgb(190, 255, 255);
    border: 2px solid rgb(0, 0, 0);
    border-radius: 10px;
    position: sticky;
    top: 0;
}

.meal-name {
    text-align: center;
}

.meal-photo {
    border-radius: 50%;
    width: 75%;
    padding: 5px;
    display: block;
    margin: 5px auto;
}

.ingredients {
    background-color: aquamarine;
    border-radius: 10px ;
    display: flex;
    align-items: center;
    flex-direction: column;
    padding-left: 0px;
}

.ingredients ul {
    padding-left: 0px;
}

.ingredients h2 {
    font-size: 24px;
    font-weight: bold;
    margin: 5px;
    text-align: center;
}   

.ingredient {
    padding: 5px;
    margin: 5px;
    list-style: none;
    background-color: rgb(210, 247, 235);
    border-radius: 5px;

}


.recipe-details {
    display: flex;
    justify-content: center;
    width: 70%;
}

.recipe-text {
    width: 70%;
    border: 2px solid black;
    border-radius: 10px;
    padding: 10px;
    margin-left: 5px;
    margin-right: 15px;
    font-size: 24px;
}



.recipe-photos {
    width: 30%;
    border: 2px solid black;
    border-radius: 10px;
    padding: 5px;
}

.meal-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.meal-info h5, .meal-tags{
    background-color: rgb(190, 255, 255);
    border-radius: 10px;
    margin: 0 10px;
    padding: 5px;

}

.meal-info-text {
    display: flex;
}
